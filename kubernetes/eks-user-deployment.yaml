apiVersion: v1
kind: Service
metadata:
  name: user
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app.kubernetes.io/name: user
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: user
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user
    spec:
      containers:
      - image: jswen19109814/user:user
        imagePullPolicy: Always
        env: 
        - name: SERVER_PORT
          value: "80"
        - name: MYSQL_DB_HOST 
          value: "utopia.cztkke9ur9zz.us-east-2.rds.amazonaws.com"
        - name: MYSQL_DB_PORT
          value: "3306"
        - name: MYSQL_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: username
        - name: MYSQL_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: password
        - name: MYSQL_DB_SCHEMA
          value: "jwutopia"
        name: user
        ports:
        - containerPort: 80
---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: user-ingress
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/group.name: jw-alb-group
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
# spec:
#   rules:
#       - http:
#           paths:
#             - path: /*
#               backend:
#                 serviceName: user
#                 servicePort: 80